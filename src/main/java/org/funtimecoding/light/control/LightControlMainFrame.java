package org.funtimecoding.light.control;

import com.jamierf.rxtx.RXTXLoader;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 * @author shiin
 */
public class LightControlMainFrame extends javax.swing.JFrame {

    /**
     * Creates new form LightControlMainFrame
     */
    public LightControlMainFrame() {
        initComponents();

        try {
            RXTXLoader.load();
        } catch (IOException ex) {
            System.err.println("Fatal error.");
        }

        final LightControl control = new LightControl();
        //System.out.println("Devices:");
        //control.printCommDevices();
        //System.out.println("Enter device to open (e.g. /dev/tty.mydevice): ");
        //Scanner scan = new Scanner(System.in);
        //String deviceName = scan.nextLine();
        //if (deviceName.equals("")) {
        //    System.err.println("Device name cannot be empty.");
        //    System.exit(1);
        //}
        try {
            control.connect("/dev/tty.uart-A7FF4A1BBE0D0922");
            System.out.println("connected");
            //control.connect(deviceName);
        } catch (Exception ex) {
            System.err.println("Fatal exception.");
        }

        ChangeListener listener = new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent event) {

                JSlider slider = (JSlider) event.getSource();

                if (slider.getValueIsAdjusting()) {

                    int red = redSlider.getValue();
                    int green = greenSlider.getValue();
                    int blue = blueSlider.getValue();
                    String msg = "C";
                    msg += " ";
                    msg += red;
                    msg += " ";
                    msg += green;
                    msg += " ";
                    msg += blue;
                    System.out.println(msg);

                    try {
                        OutputStream out = control.getOut();
                        int len = msg.length();

                        for (int i = 0; i < len; i++) {
                            out.write(msg.charAt(i));
                        }
                    } catch (Exception e) {
                        System.err.println("Error in stateChanged: " + e.getMessage());
                    }
                }
            }
        };

        redSlider.addChangeListener(listener);
        greenSlider.addChangeListener(listener);
        blueSlider.addChangeListener(listener);

        InputStream in = control.getIn();
        if (in != null) {
            (new Thread(new SerialReader(in, redSlider, greenSlider, blueSlider))).start();
        } else {
            System.err.println("Device not be found.");
            System.exit(1);
        }
    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println("Fatal error.");
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LightControlMainFrame().setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        redSlider = new javax.swing.JSlider();
        greenSlider = new javax.swing.JSlider();
        blueSlider = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        redSlider.setMaximum(255);
        redSlider.setValue(0);
        redSlider.setName("r"); // NOI18N

        greenSlider.setMaximum(255);
        greenSlider.setValue(0);
        greenSlider.setName("g"); // NOI18N

        blueSlider.setMaximum(255);
        blueSlider.setValue(0);
        blueSlider.setName("b"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(redSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(greenSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blueSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(redSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(greenSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(blueSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider blueSlider;
    private javax.swing.JSlider greenSlider;
    private javax.swing.JSlider redSlider;
    // End of variables declaration//GEN-END:variables
}
